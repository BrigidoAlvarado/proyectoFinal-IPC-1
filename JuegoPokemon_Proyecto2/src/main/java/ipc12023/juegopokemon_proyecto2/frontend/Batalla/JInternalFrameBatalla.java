
package ipc12023.juegopokemon_proyecto2.frontend.Batalla;

import ipc12023.juegopokemon_proyecto2.backend.*;
import ipc12023.juegopokemon_proyecto2.frontend.JDlgMenuPokemon;
import ipc12023.juegopokemon_proyecto2.frontend.JuegoPokemonApp;
import ipc12023.juegopokemon_proyecto2.frontend.pokemon.*;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

public abstract class JInternalFrameBatalla extends javax.swing.JInternalFrame{
    
    final static int ORO_BASE_AL_GANAR = 180;
    final static int MULTIPLICADOR_ORO_AL_GANAR = 20;
    
    protected JuegoPokemonApp ventana;
    protected boolean hayGanador;
    
//VARIABLES BATALLA
    protected Pokemon atacante;
    protected Pokemon defensor;
    protected String enemigo;
    private double danio;
    private int faseBatalla;
    
    //JUGADOR
    protected boolean turnoJugador;
    protected Jugador jugador;
    protected Pokemon pokemonJugador;
    protected Pokemon[] pokemonesJugador;
    //POKEMON ENEMIGO
    protected Pokemon pokemonOponente;
    

    /**
     * Creates new form JInternalFrameBatalla
     */
    public JInternalFrameBatalla (JuegoPokemonApp ventana, String tipeBattle) throws JuegoPokemonException{
        
        this.ventana = ventana;
        JOptionPane.showMessageDialog(this.ventana, "Iniciarás una batalla pokémon ", tipeBattle, JOptionPane.INFORMATION_MESSAGE);
        this.ventana.addJFrameComponent(this);

        //CARGAR AL JUGADOR
        try {
             jugador = AdminJuego.cargar(this.ventana.getContraseña());
        } catch (JuegoPokemonException e) {
            JOptionPane.showMessageDialog(this.ventana, e.getMessage(), "Error al cargar datos", JOptionPane.ERROR_MESSAGE);
            cerrar();
        }
        
         pedirPokemones();
       
        //Verificar errores en la seleccion de los pokemones 
        if (arregloNulo(pokemonesJugador)) {
            cerrar();
            throw new JuegoPokemonException("Has cancelado la batalla");
        }
        // eleccion del primer Pokemon
        if (pokemonesJugador.length != 1) {
            int columna = AdminJuego.tamañoMenu(pokemonesJugador.length)[AdminJuego.COLUMNA];
            int fila = AdminJuego.tamañoMenu(pokemonesJugador.length)[AdminJuego.FILA];
            JDlgMenuPokemon menuPokemonPrincipal = new JDlgMenuPokemon(ventana, true, pokemonesJugador, 1, "Elija un pokemon para iniciar la batalla", columna, fila);
            menuPokemonPrincipal.setVisible(true);
            pokemonJugador = menuPokemonPrincipal.getPokemonesElegidos()[0];
        }
        else{
            pokemonJugador = pokemonesJugador[0];
        }
        //Errores en la seleccion del primer pokemon
        if (pokemonJugador == null) {
            this.cerrar();
            throw new JuegoPokemonException("Has cancelado la batalla");
        
        }
        initComponents();
        jLblNombreJugador.setText(jugador.getNombre());
        actualizarJCmbBxCambiarPokemon();
        mostrarComponentes(false);
        jugador.vecesBatalla();
       
    }
    
    private void pedirPokemones() throws JuegoPokemonException{
        
        Pokemon[] pokemonesDisponibles = jugador.getPokemonesDisponibles();
        
        if (pokemonesDisponibles.length == 0 ) {
            throw new JuegoPokemonException("Todos tus pokemones estan debilitados, sanalos en el hospital");
        } 
        else if (pokemonesDisponibles.length < 4) {
            pokemonesJugador = pokemonesDisponibles;
            
        }
        else{
            int columna = AdminJuego.tamañoMenu(pokemonesDisponibles.length)[AdminJuego.COLUMNA];
            int fila = AdminJuego.tamañoMenu(pokemonesDisponibles.length)[AdminJuego.FILA];
            JDlgMenuPokemon menu = new JDlgMenuPokemon(ventana, true, pokemonesDisponibles, 3, "Seleccione TRES pokemones para la batalla", columna, fila);
            menu.setVisible(true);
            pokemonesJugador = menu.getPokemonesElegidos(); 
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPnlMenu = new javax.swing.JPanel();
        jLblTextoUtilizarObjeto = new javax.swing.JLabel();
        jLblTextoCambiarPokemon = new javax.swing.JLabel();
        jCmbBxUtilizarObjeto = new javax.swing.JComboBox<>();
        jCmbBxCambiarPokemon = new javax.swing.JComboBox<>();
        jBttnUsarObjeto = new javax.swing.JButton();
        jBttnCambiarPokemon = new javax.swing.JButton();
        jPnlPokemonJugador = new javax.swing.JPanel();
        jLblImagenEntrenador = new javax.swing.JLabel();
        jLblEntrenador = new javax.swing.JLabel();
        jLblImagenJugador = new javax.swing.JLabel();
        jLblNombreJugador = new javax.swing.JLabel();
        jLblTextoNivel = new javax.swing.JLabel();
        jLblNivelJugador = new javax.swing.JLabel();
        jBttnAtacarContinuarl = new javax.swing.JButton();
        jPnlPokemonOponente = new javax.swing.JPanel();
        jBttnSalir = new javax.swing.JButton();
        jPnlInformacionBatalla = new javax.swing.JPanel();
        jLblInformacionVentana2 = new javax.swing.JLabel();
        jLblInformacionVentana1 = new javax.swing.JLabel();
        jLblTurno = new javax.swing.JLabel();
        jPnlDatosPokemonOponente = new javax.swing.JPanel();
        jLblNombrePokemonEntrenador = new javax.swing.JLabel();
        jLblTextoTipo1 = new javax.swing.JLabel();
        jLblTipoPokemonEntrenador = new javax.swing.JLabel();
        jLblTextoVida1 = new javax.swing.JLabel();
        jLblTextoVidaPokemonEntrenador = new javax.swing.JLabel();
        jLblTextoNivelPokemon1 = new javax.swing.JLabel();
        jLblNivelPokemonEntrenador = new javax.swing.JLabel();
        jPnlDatosPokemonJugador = new javax.swing.JPanel();
        jLblNombrePokemonJugador = new javax.swing.JLabel();
        jLblTextoTipo = new javax.swing.JLabel();
        jLblTipoPokemonJugador = new javax.swing.JLabel();
        jLblTextoVida = new javax.swing.JLabel();
        jLblTextoVidaPokemonJugador = new javax.swing.JLabel();
        jLblTextoNivelPokemon = new javax.swing.JLabel();
        jLblNivelPokemonJugador = new javax.swing.JLabel();
        jPanelLimInf = new javax.swing.JPanel();

        setBackground(new java.awt.Color(204, 255, 204));
        setBorder(javax.swing.BorderFactory.createEtchedBorder());
        setForeground(new java.awt.Color(255, 153, 51));
        setTitle("BATALLA");
        setToolTipText("");
        setName("batallaFrame"); // NOI18N
        setNormalBounds(new java.awt.Rectangle(0, 0, 510, 600));
        setPreferredSize(new java.awt.Dimension(580, 625));
        setVisible(true);

        jPnlMenu.setBackground(new java.awt.Color(204, 204, 255));
        jPnlMenu.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPnlMenu.setForeground(new java.awt.Color(0, 0, 0));
        jPnlMenu.setLayout(new java.awt.GridLayout(3, 2, 4, 4));

        jLblTextoUtilizarObjeto.setForeground(new java.awt.Color(0, 0, 0));
        jLblTextoUtilizarObjeto.setText("         Escoja un Objeto ");
        jPnlMenu.add(jLblTextoUtilizarObjeto);

        jLblTextoCambiarPokemon.setForeground(new java.awt.Color(0, 0, 0));
        jLblTextoCambiarPokemon.setText("     Escoja un Pokemon");
        jPnlMenu.add(jLblTextoCambiarPokemon);

        jCmbBxUtilizarObjeto.setBackground(new java.awt.Color(255, 153, 0));
        jCmbBxUtilizarObjeto.setForeground(new java.awt.Color(0, 0, 0));
        jCmbBxUtilizarObjeto.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Catchball semiprofesional" }));
        jCmbBxUtilizarObjeto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCmbBxUtilizarObjetoActionPerformed(evt);
            }
        });
        jPnlMenu.add(jCmbBxUtilizarObjeto);

        jCmbBxCambiarPokemon.setBackground(new java.awt.Color(255, 153, 0));
        jCmbBxCambiarPokemon.setForeground(new java.awt.Color(0, 0, 0));
        jCmbBxCambiarPokemon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCmbBxCambiarPokemonActionPerformed(evt);
            }
        });
        jPnlMenu.add(jCmbBxCambiarPokemon);

        jBttnUsarObjeto.setBackground(new java.awt.Color(255, 153, 0));
        jBttnUsarObjeto.setForeground(new java.awt.Color(0, 0, 0));
        jBttnUsarObjeto.setText("Usar Objeto");
        jBttnUsarObjeto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBttnUsarObjetoActionPerformed(evt);
            }
        });
        jPnlMenu.add(jBttnUsarObjeto);

        jBttnCambiarPokemon.setBackground(new java.awt.Color(255, 153, 0));
        jBttnCambiarPokemon.setForeground(new java.awt.Color(0, 0, 0));
        jBttnCambiarPokemon.setText("Cambiar Pokemon");
        jBttnCambiarPokemon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBttnCambiarPokemonActionPerformed(evt);
            }
        });
        jPnlMenu.add(jBttnCambiarPokemon);

        jPnlPokemonJugador.setBackground(new java.awt.Color(204, 204, 255));
        jPnlPokemonJugador.setPreferredSize(new java.awt.Dimension(200, 200));

        jLblImagenEntrenador.setForeground(new java.awt.Color(0, 0, 0));
        jLblImagenEntrenador.setIcon(new javax.swing.ImageIcon(getClass().getResource("/casillas/entrenador.png"))); // NOI18N

        jLblEntrenador.setBackground(new java.awt.Color(0, 0, 0));
        jLblEntrenador.setForeground(new java.awt.Color(0, 0, 0));
        jLblEntrenador.setText("Entrenador");

        jLblImagenJugador.setForeground(new java.awt.Color(0, 0, 0));
        jLblImagenJugador.setIcon(new javax.swing.ImageIcon(getClass().getResource("/casillas/jugador.png"))); // NOI18N

        jLblNombreJugador.setBackground(new java.awt.Color(0, 0, 0));
        jLblNombreJugador.setForeground(new java.awt.Color(0, 0, 0));
        jLblNombreJugador.setText("Jugador");

        jLblTextoNivel.setBackground(new java.awt.Color(0, 0, 0));
        jLblTextoNivel.setForeground(new java.awt.Color(0, 0, 0));
        jLblTextoNivel.setText("Nivel: ");

        jLblNivelJugador.setBackground(new java.awt.Color(0, 0, 0));
        jLblNivelJugador.setForeground(new java.awt.Color(0, 0, 0));
        jLblNivelJugador.setText("00");

        jBttnAtacarContinuarl.setBackground(new java.awt.Color(255, 153, 0));
        jBttnAtacarContinuarl.setForeground(new java.awt.Color(0, 0, 0));
        jBttnAtacarContinuarl.setText("CONTINUAR");
        jBttnAtacarContinuarl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBttnAtacarContinuarlActionPerformed(evt);
            }
        });

        jPnlPokemonOponente.setBackground(new java.awt.Color(204, 204, 255));
        jPnlPokemonOponente.setPreferredSize(new java.awt.Dimension(200, 200));
        jPnlPokemonOponente.setRequestFocusEnabled(false);

        jBttnSalir.setBackground(new java.awt.Color(255, 153, 0));
        jBttnSalir.setForeground(new java.awt.Color(0, 0, 0));
        jBttnSalir.setText("SALIR");
        jBttnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBttnSalirActionPerformed(evt);
            }
        });

        jPnlInformacionBatalla.setBackground(new java.awt.Color(255, 255, 255));
        jPnlInformacionBatalla.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "INFORMACIÓN DE LA BATALLA", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("sansserif", 1, 12), new java.awt.Color(0, 0, 0))); // NOI18N
        jPnlInformacionBatalla.setForeground(new java.awt.Color(0, 0, 0));

        jLblInformacionVentana2.setForeground(new java.awt.Color(0, 0, 0));
        jLblInformacionVentana2.setBorder(new javax.swing.border.MatteBorder(null));

        jLblInformacionVentana1.setForeground(new java.awt.Color(0, 0, 0));
        jLblInformacionVentana1.setBorder(new javax.swing.border.MatteBorder(null));

        jLblTurno.setForeground(new java.awt.Color(0, 0, 0));
        jLblTurno.setBorder(new javax.swing.border.MatteBorder(null));

        javax.swing.GroupLayout jPnlInformacionBatallaLayout = new javax.swing.GroupLayout(jPnlInformacionBatalla);
        jPnlInformacionBatalla.setLayout(jPnlInformacionBatallaLayout);
        jPnlInformacionBatallaLayout.setHorizontalGroup(
            jPnlInformacionBatallaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLblTurno, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(jLblInformacionVentana1, javax.swing.GroupLayout.PREFERRED_SIZE, 480, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(jLblInformacionVentana2, javax.swing.GroupLayout.PREFERRED_SIZE, 480, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        jPnlInformacionBatallaLayout.setVerticalGroup(
            jPnlInformacionBatallaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPnlInformacionBatallaLayout.createSequentialGroup()
                .addComponent(jLblTurno, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8)
                .addComponent(jLblInformacionVentana1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8)
                .addComponent(jLblInformacionVentana2, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPnlDatosPokemonOponente.setBackground(new java.awt.Color(204, 204, 255));

        jLblNombrePokemonEntrenador.setBackground(new java.awt.Color(0, 0, 0));
        jLblNombrePokemonEntrenador.setForeground(new java.awt.Color(0, 0, 0));
        jLblNombrePokemonEntrenador.setText("PokemonB");

        jLblTextoTipo1.setBackground(new java.awt.Color(0, 0, 0));
        jLblTextoTipo1.setForeground(new java.awt.Color(0, 0, 0));
        jLblTextoTipo1.setText("Tipo");

        jLblTipoPokemonEntrenador.setBackground(new java.awt.Color(0, 0, 0));
        jLblTipoPokemonEntrenador.setForeground(new java.awt.Color(0, 0, 0));
        jLblTipoPokemonEntrenador.setText("electrico");

        jLblTextoVida1.setBackground(new java.awt.Color(0, 0, 0));
        jLblTextoVida1.setForeground(new java.awt.Color(0, 0, 0));
        jLblTextoVida1.setText("Vida");

        jLblTextoVidaPokemonEntrenador.setBackground(new java.awt.Color(0, 0, 0));
        jLblTextoVidaPokemonEntrenador.setForeground(new java.awt.Color(0, 0, 0));
        jLblTextoVidaPokemonEntrenador.setText("00.00");

        jLblTextoNivelPokemon1.setBackground(new java.awt.Color(0, 0, 0));
        jLblTextoNivelPokemon1.setForeground(new java.awt.Color(0, 0, 0));
        jLblTextoNivelPokemon1.setText("Nivel");

        jLblNivelPokemonEntrenador.setBackground(new java.awt.Color(0, 0, 0));
        jLblNivelPokemonEntrenador.setForeground(new java.awt.Color(0, 0, 0));
        jLblNivelPokemonEntrenador.setText("00");

        javax.swing.GroupLayout jPnlDatosPokemonOponenteLayout = new javax.swing.GroupLayout(jPnlDatosPokemonOponente);
        jPnlDatosPokemonOponente.setLayout(jPnlDatosPokemonOponenteLayout);
        jPnlDatosPokemonOponenteLayout.setHorizontalGroup(
            jPnlDatosPokemonOponenteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPnlDatosPokemonOponenteLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPnlDatosPokemonOponenteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPnlDatosPokemonOponenteLayout.createSequentialGroup()
                        .addComponent(jLblNombrePokemonEntrenador, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLblTextoTipo1))
                    .addGroup(jPnlDatosPokemonOponenteLayout.createSequentialGroup()
                        .addComponent(jLblTextoVida1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLblTextoVidaPokemonEntrenador)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLblTextoNivelPokemon1)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPnlDatosPokemonOponenteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPnlDatosPokemonOponenteLayout.createSequentialGroup()
                        .addComponent(jLblNivelPokemonEntrenador)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jLblTipoPokemonEntrenador, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPnlDatosPokemonOponenteLayout.setVerticalGroup(
            jPnlDatosPokemonOponenteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPnlDatosPokemonOponenteLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPnlDatosPokemonOponenteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLblNombrePokemonEntrenador)
                    .addComponent(jLblTextoTipo1)
                    .addComponent(jLblTipoPokemonEntrenador))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addGroup(jPnlDatosPokemonOponenteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLblTextoVida1)
                    .addComponent(jLblTextoVidaPokemonEntrenador)
                    .addComponent(jLblTextoNivelPokemon1)
                    .addComponent(jLblNivelPokemonEntrenador))
                .addContainerGap())
        );

        jPnlDatosPokemonJugador.setBackground(new java.awt.Color(204, 204, 255));

        jLblNombrePokemonJugador.setBackground(new java.awt.Color(0, 0, 0));
        jLblNombrePokemonJugador.setForeground(new java.awt.Color(0, 0, 0));
        jLblNombrePokemonJugador.setText("PokemonA");
        jLblNombrePokemonJugador.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        jLblTextoTipo.setBackground(new java.awt.Color(0, 0, 0));
        jLblTextoTipo.setForeground(new java.awt.Color(0, 0, 0));
        jLblTextoTipo.setText("Tipo");

        jLblTipoPokemonJugador.setBackground(new java.awt.Color(0, 0, 0));
        jLblTipoPokemonJugador.setForeground(new java.awt.Color(0, 0, 0));
        jLblTipoPokemonJugador.setText("electrico");

        jLblTextoVida.setBackground(new java.awt.Color(0, 0, 0));
        jLblTextoVida.setForeground(new java.awt.Color(0, 0, 0));
        jLblTextoVida.setText("Vida");

        jLblTextoVidaPokemonJugador.setBackground(new java.awt.Color(0, 0, 0));
        jLblTextoVidaPokemonJugador.setForeground(new java.awt.Color(0, 0, 0));
        jLblTextoVidaPokemonJugador.setText("00.00");

        jLblTextoNivelPokemon.setBackground(new java.awt.Color(0, 0, 0));
        jLblTextoNivelPokemon.setForeground(new java.awt.Color(0, 0, 0));
        jLblTextoNivelPokemon.setText("Nivel");

        jLblNivelPokemonJugador.setBackground(new java.awt.Color(0, 0, 0));
        jLblNivelPokemonJugador.setForeground(new java.awt.Color(0, 0, 0));
        jLblNivelPokemonJugador.setText("00");

        javax.swing.GroupLayout jPnlDatosPokemonJugadorLayout = new javax.swing.GroupLayout(jPnlDatosPokemonJugador);
        jPnlDatosPokemonJugador.setLayout(jPnlDatosPokemonJugadorLayout);
        jPnlDatosPokemonJugadorLayout.setHorizontalGroup(
            jPnlDatosPokemonJugadorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPnlDatosPokemonJugadorLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPnlDatosPokemonJugadorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLblNombrePokemonJugador, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPnlDatosPokemonJugadorLayout.createSequentialGroup()
                        .addComponent(jLblTextoVida)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLblTextoVidaPokemonJugador)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPnlDatosPokemonJugadorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPnlDatosPokemonJugadorLayout.createSequentialGroup()
                        .addComponent(jLblTextoTipo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLblTipoPokemonJugador, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPnlDatosPokemonJugadorLayout.createSequentialGroup()
                        .addComponent(jLblTextoNivelPokemon)
                        .addGap(18, 18, 18)
                        .addComponent(jLblNivelPokemonJugador, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );
        jPnlDatosPokemonJugadorLayout.setVerticalGroup(
            jPnlDatosPokemonJugadorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPnlDatosPokemonJugadorLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPnlDatosPokemonJugadorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLblNombrePokemonJugador)
                    .addComponent(jLblTextoTipo)
                    .addComponent(jLblTipoPokemonJugador))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPnlDatosPokemonJugadorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLblTextoVida)
                    .addComponent(jLblTextoVidaPokemonJugador)
                    .addComponent(jLblTextoNivelPokemon)
                    .addComponent(jLblNivelPokemonJugador, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanelLimInf.setBackground(new java.awt.Color(204, 255, 204));

        javax.swing.GroupLayout jPanelLimInfLayout = new javax.swing.GroupLayout(jPanelLimInf);
        jPanelLimInf.setLayout(jPanelLimInfLayout);
        jPanelLimInfLayout.setHorizontalGroup(
            jPanelLimInfLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanelLimInfLayout.setVerticalGroup(
            jPanelLimInfLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 18, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLblImagenJugador)
                                .addGap(10, 10, 10)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLblNombreJugador)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLblTextoNivel)
                                        .addGap(7, 7, 7)
                                        .addComponent(jLblNivelJugador)))
                                .addGap(236, 236, 236)
                                .addComponent(jLblEntrenador)
                                .addGap(9, 9, 9)
                                .addComponent(jLblImagenEntrenador))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jPnlPokemonJugador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jPnlDatosPokemonJugador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(50, 50, 50)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jPnlPokemonOponente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jPnlDatosPokemonOponente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPnlInformacionBatalla, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jPnlMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 390, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jBttnAtacarContinuarl, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jBttnSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(183, 183, 183)
                        .addComponent(jPanelLimInf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(24, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLblImagenJugador)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLblNombreJugador)
                        .addGap(14, 14, 14)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLblTextoNivel)
                            .addComponent(jLblNivelJugador)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLblEntrenador))
                    .addComponent(jLblImagenEntrenador))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPnlDatosPokemonJugador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPnlDatosPokemonOponente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPnlPokemonJugador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPnlPokemonOponente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addComponent(jPnlInformacionBatalla, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jBttnAtacarContinuarl)
                        .addGap(18, 18, 18)
                        .addComponent(jBttnSalir))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jPnlMenu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jPanelLimInf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        getAccessibleContext().setAccessibleParent(jBttnAtacarContinuarl);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBttnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBttnSalirActionPerformed
        try {
            jugador.actualizar();
            cerrar();
        } catch (JuegoPokemonException e) {
            cerrar();
        }
        
    }//GEN-LAST:event_jBttnSalirActionPerformed

    private void jCmbBxUtilizarObjetoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCmbBxUtilizarObjetoActionPerformed
    }//GEN-LAST:event_jCmbBxUtilizarObjetoActionPerformed

    private void jBttnAtacarContinuarlActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBttnAtacarContinuarlActionPerformed
        try {
            faseBatalla();
            jugador.actualizar();
        } catch (JuegoPokemonException e) {
            JOptionPane.showMessageDialog(ventana, e.getMessage(), "ERROR", JOptionPane.ERROR_MESSAGE);
        }
        
    }//GEN-LAST:event_jBttnAtacarContinuarlActionPerformed

    private void jCmbBxCambiarPokemonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCmbBxCambiarPokemonActionPerformed
            
          
    }//GEN-LAST:event_jCmbBxCambiarPokemonActionPerformed

    private void jBttnCambiarPokemonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBttnCambiarPokemonActionPerformed
       CambiarPokemon(String.valueOf(jCmbBxCambiarPokemon.getSelectedItem()));
    }//GEN-LAST:event_jBttnCambiarPokemonActionPerformed

    private void jBttnUsarObjetoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBttnUsarObjetoActionPerformed
        
        try {
            jugador.usarObjeto(String.valueOf(jCmbBxUtilizarObjeto.getSelectedItem()), pokemonJugador, pokemonOponente, ventana,this);
            actualizarDatos();
        } catch (JuegoPokemonException e) {
            JOptionPane.showMessageDialog(ventana, e.getMessage(), "", JOptionPane.INFORMATION_MESSAGE);
        }
            
    }//GEN-LAST:event_jBttnUsarObjetoActionPerformed

    public void cerrar(){
        
        ventana.regresarMapaPrincipal();
        ventana.mostrarComponentesTablero(true);
        ventana.refrescar();
        ventana.ocultarBttnSalir();
        super.dispose();
    }
    
    private boolean arregloNulo (Pokemon[] pokemonesJugador){
        int cont = 0;
        for (int i = 0; i < pokemonesJugador.length; i++) {
            if (pokemonesJugador[i] == null) {
                cont++;
            }
        }
      return (cont != 0);
    }
    
    public void iniciarBatalla(){
         definirTurnos();
         mostrarComponentes(true);
    }
    
    public abstract void cambiarPokemonEnemigo();
    
    public abstract void mensajeTurno();
    
    protected void definirTurnos(){

            if (AdminJuego.probabilidad(50)) {

                turnoJugador = true;
                atacante = pokemonJugador;
                defensor = pokemonOponente;
                jLblTurno.setText("TURNO DE ATACAR DE: "+jugador.getNombre());
                jBttnAtacarContinuarl.setText("ATACAR");
                
                JOptionPane.showMessageDialog(ventana, "Iniciarás la batalla con " + atacante.getNombre(), "Turno "+jugador.getNombre(), JOptionPane.PLAIN_MESSAGE,
                        new ImageIcon(getClass().getResource(atacante.getPath())));
            }
            else{
                jPnlMenu.setVisible(false);
                jBttnAtacarContinuarl.setText("CONTINUAR");
                jLblTurno.setText("TURNO DE ATACAR DE: " + enemigo );
                turnoJugador = false;
                atacante = pokemonOponente;
                defensor = pokemonJugador;
                
                mensajeTurno();
            }
            faseBatalla++;
            actualizarDatos();
        }
    
    protected void mostrarComponentes(boolean mostrar){
        jPnlPokemonJugador.setVisible(mostrar);
        jPnlPokemonOponente.setVisible(mostrar);
        jBttnSalir.setVisible(mostrar);
        jBttnAtacarContinuarl.setVisible(mostrar);
    }
    
    private void cambiarTurno(){
        
        if (turnoJugador) {
            
            turnoJugador = false;
            atacante = pokemonOponente;
            defensor = pokemonJugador;
        }
        else{
            turnoJugador = true;
            atacante = pokemonJugador;
            defensor = pokemonOponente;
        }
       
    }
    
    private void faseBatalla(){
        switch (faseBatalla) {
          
            case 0:
                turnoDeAtacar();
                break;
            case 1:
                calcularAtaqueBasico();
                break;
            case 2:
                calcularDañoPorSinergia();
                break;
            case 3:
                turnoDefenza();
                break;
            case 4:
                calcularDefenza();
                break;
            default:
        }
        
        try {
                    cambiarPokemonesDebilitados();

        } catch (JuegoPokemonException e) {
            JOptionPane.showMessageDialog(ventana, e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
        faseBatalla++;
        if (faseBatalla > 4) {
            faseBatalla = 0;
            cambiarTurno();
        }
        actualizarDatos();
        
        
    }
    
    private void turnoDeAtacar (){
       
        if (turnoJugador) {
            
            jLblTurno.setText("TURNO DE ATACAR DE: " + jugador.getNombre());
            jBttnAtacarContinuarl.setText("ATACAR");
            jPnlMenu.setVisible(true);
        }
        else{
            jLblTurno.setText("TURNO DE ATACAR DE: " + enemigo);
            jBttnAtacarContinuarl.setText("CONTINUAR");
        }
        jLblInformacionVentana1.setText("");
        jLblInformacionVentana2.setText("");
    }
    
    private void calcularAtaqueBasico(){
        jBttnAtacarContinuarl.setText("CONTINUAR");
        jPnlMenu.setVisible(false);
        double daño = atacante.calcularDañoAtaque();
        jLblInformacionVentana1.setText(atacante.getNombre()+" lanza un ataque de " + daño + " puntos de daño");
        
    }
    
    private void calcularDañoPorSinergia(){
        
        danio = atacante.calcularDañoPorSinergia(defensor);
        jLblInformacionVentana2.setText("El ataque cambia a " + danio + " puntos de daño por atacar a un pokemon de tipo " + defensor.getTipo());
        atacante.calcularNivel(ventana);
    }
    
    private void turnoDefenza(){
         if (turnoJugador) {
            
            jLblTurno.setText("TURNO DE LA DEFENZA DE: " + enemigo);
            actualizarJCmbBxCambiarPokemon();
            
        }
        else{
            jLblTurno.setText("TURNO DE LA DENFENZA DE: "+jugador.getNombre());
            jBttnAtacarContinuarl.setText("DEFENDER");
        }
        jLblInformacionVentana1.setText("");
        jLblInformacionVentana2.setText("");
    }
    
    private void calcularDefenza(){
        jBttnAtacarContinuarl.setText("CONTINUAR");
        double defenza = defensor.defender(danio, ventana);
        jLblInformacionVentana1.setText(defensor.getNombre() + " se defiende y reduce el daño recibido a " + defenza + " puntos de daño");
        jLblInformacionVentana2.setText(defensor.getNombre() + " ahora tinene " + defensor.getVida() + " puntos de vida");
        
    }
    
    private void actualizarJCmbBxCambiarPokemon(){
        
        jCmbBxCambiarPokemon.removeAllItems();
        
        for (int i = 0; i < pokemonesJugador.length; i++) {
            if (!pokemonesJugador[i].isDebilitado()) {
                jCmbBxCambiarPokemon.addItem(pokemonesJugador[i].getNombre());
            }
        }
       jCmbBxCambiarPokemon.repaint();
       jCmbBxCambiarPokemon.revalidate();
    }
    
    private void refrescarJPnlPokemones(){
        
        jPnlPokemonJugador.removeAll();
        jPnlPokemonJugador.add(pokemonJugador);
        jPnlPokemonJugador.revalidate();
        jPnlPokemonJugador.repaint();
        
        jPnlPokemonOponente.removeAll();
        jPnlPokemonOponente.add(pokemonOponente);
        jPnlPokemonOponente.revalidate();
        jPnlPokemonOponente.repaint();
    }
    
    public void actualizarDatos (){
        
        //Actualizar los datos del jugador en la ventana
        pokemonJugador.agregarImagenYMarco();
        jLblNivelJugador.setText(String.valueOf(jugador.getNivel()));
        jLblNombrePokemonJugador.setText(pokemonJugador.getNombre());
        jLblTipoPokemonJugador.setText(pokemonJugador.getTipo());
        jLblTextoVidaPokemonJugador.setText(String.valueOf(pokemonJugador.getPorcentajeVida()) + " %");
        jLblNivelPokemonJugador.setText(String.valueOf(pokemonJugador.getNivel()));
        //Actualizar datos del contrincante
        pokemonOponente.agregarImagenYMarco();
        jLblNombrePokemonEntrenador.setText(pokemonOponente.getNombre());
        jLblTipoPokemonEntrenador.setText(pokemonOponente.getTipo());
        jLblTextoVidaPokemonEntrenador.setText(String.valueOf(pokemonOponente.getPorcentajeVida()) + " %");        
        jLblNivelPokemonEntrenador.setText(String.valueOf(pokemonOponente.getNivel()));
        refrescarJPnlPokemones();
    }
    
    private void cambiarPokemonesDebilitados() throws JuegoPokemonException{
       
        if ( defensor.isDebilitado() ) {
            
            JOptionPane.showMessageDialog(ventana, defensor.getNombre()+" ha sido debilitado", "POKEMON DEBILITADO", JOptionPane.INFORMATION_MESSAGE);
            actualizarJCmbBxCambiarPokemon();
            hayGanador = true;   

            if (turnoJugador) {
                    cambiarPokemonEnemigo();
                }
                else {
                    for (int i = 0; i < pokemonesJugador.length; i++) {
                        if (!pokemonesJugador[i].isDebilitado()) {
                            pokemonJugador = pokemonesJugador[i];
                            JOptionPane.showMessageDialog(ventana, "Ahora "+pokemonJugador.getNombre()+" luchará", "CAMBIO DE POKEMON", JOptionPane.INFORMATION_MESSAGE);
                            hayGanador = false;
                            break;
                        }
                    }
                }
            
        }
     anunciarGanador();
        
    }
    
    private void anunciarGanador()throws JuegoPokemonException{
        
        if (hayGanador) {
            if (turnoJugador) {
                JOptionPane.showMessageDialog(ventana, "Felicidades "+ jugador.getNombre() + " has ganado la batalla", "VICTORIA", JOptionPane.INFORMATION_MESSAGE);
                premiar();
                jugador.actualizar();
                this.cerrar();
                
            }
            else{
                JOptionPane.showMessageDialog(ventana, "Has perdido la batalla", "DERROTA", JOptionPane.INFORMATION_MESSAGE);
                jugador.actualizar();
                this.cerrar();
            }
        }
    }
    
    private void CambiarPokemon(String pokemon){
        
        for (int i = 0; i < pokemonesJugador.length; i++) {
                if (pokemonesJugador[i].getNombre().equalsIgnoreCase(pokemon)) {
                    pokemonJugador = pokemonesJugador[i];
                    atacante = pokemonesJugador[i];
                    actualizarDatos();
            }
        }
    }
    
    private void premiar()throws JuegoPokemonException{
        int oroGanado = ORO_BASE_AL_GANAR + (jugador.getNivel() * MULTIPLICADOR_ORO_AL_GANAR);
        jugador.ganarOro(oroGanado, ventana);
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBttnAtacarContinuarl;
    private javax.swing.JButton jBttnCambiarPokemon;
    private javax.swing.JButton jBttnSalir;
    private javax.swing.JButton jBttnUsarObjeto;
    private javax.swing.JComboBox<String> jCmbBxCambiarPokemon;
    protected javax.swing.JComboBox<String> jCmbBxUtilizarObjeto;
    protected javax.swing.JLabel jLblEntrenador;
    protected javax.swing.JLabel jLblImagenEntrenador;
    private javax.swing.JLabel jLblImagenJugador;
    private javax.swing.JLabel jLblInformacionVentana1;
    private javax.swing.JLabel jLblInformacionVentana2;
    private javax.swing.JLabel jLblNivelJugador;
    protected javax.swing.JLabel jLblNivelPokemonEntrenador;
    private javax.swing.JLabel jLblNivelPokemonJugador;
    private javax.swing.JLabel jLblNombreJugador;
    protected javax.swing.JLabel jLblNombrePokemonEntrenador;
    private javax.swing.JLabel jLblNombrePokemonJugador;
    private javax.swing.JLabel jLblTextoCambiarPokemon;
    private javax.swing.JLabel jLblTextoNivel;
    private javax.swing.JLabel jLblTextoNivelPokemon;
    private javax.swing.JLabel jLblTextoNivelPokemon1;
    private javax.swing.JLabel jLblTextoTipo;
    private javax.swing.JLabel jLblTextoTipo1;
    private javax.swing.JLabel jLblTextoUtilizarObjeto;
    private javax.swing.JLabel jLblTextoVida;
    private javax.swing.JLabel jLblTextoVida1;
    protected javax.swing.JLabel jLblTextoVidaPokemonEntrenador;
    private javax.swing.JLabel jLblTextoVidaPokemonJugador;
    protected javax.swing.JLabel jLblTipoPokemonEntrenador;
    private javax.swing.JLabel jLblTipoPokemonJugador;
    private javax.swing.JLabel jLblTurno;
    private javax.swing.JPanel jPanelLimInf;
    private javax.swing.JPanel jPnlDatosPokemonJugador;
    private javax.swing.JPanel jPnlDatosPokemonOponente;
    private javax.swing.JPanel jPnlInformacionBatalla;
    private javax.swing.JPanel jPnlMenu;
    private javax.swing.JPanel jPnlPokemonJugador;
    private javax.swing.JPanel jPnlPokemonOponente;
    // End of variables declaration//GEN-END:variables
}
